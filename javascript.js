// to generate a pick randomly, I used the Math.random() method to randomly generate numbers to target a string on the array. But since it only generates decimal numbers, in order to generate a whole number, I added Math.floor() method to round off the decimal.

function computerPlay() {
    const pick = ['rock', 'paper', 'scissors'];
    return pick[Math.floor(Math.random() * pick.length)];
}


// for the function playRound we added to paramters playerSelection(generated by the inout of the player) & computerSelection(is generated by the computerPlay() function we had created above).  Added

function playRound(playerSelection, computerSelection) {
    if (playerSelection.toLowerCase() === "rock" && computerSelection === "rock" || playerSelection.toLowerCase() === "paper" && computerSelection === "paper" || playerSelection.toLowerCase() === "scissors" && computerSelection === "scissors") {
        alert(`It's a tie! You both pick ${playerSelection}`);
    } else if (playerSelection.toLowerCase() !== "rock" && playerSelection.toLowerCase() !== "paper" && playerSelection.toLowerCase() !== "scissors") {
        alert(`That's not the right pick for the game!`);    
    } else if (playerSelection.toLowerCase() === "rock" && computerSelection === "paper") {
        alert(`You lose! ${computerSelection} beats ${playerSelection.toLowerCase()}`);
    } else if (playerSelection.toLowerCase() === "paper" && computerSelection === "scissors") {
        alert(`You lose! ${computerSelection} beats ${playerSelection.toLowerCase()}`);
    } else if (playerSelection.toLowerCase() === "scissors" && computerSelection === "rock") {
        alert(`You lose! ${computerSelection} beats ${playerSelection.toLowerCase()}`);
    } else {
        alert(`You win! ${playerSelection.toLowerCase()} beats ${computerSelection}`);
    }
}

const playerSelection = prompt("Start the game by choosing among Rock, Paper, Scissors")
const computerSelection = computerPlay();
console.log(playRound(playerSelection, computerSelection));

